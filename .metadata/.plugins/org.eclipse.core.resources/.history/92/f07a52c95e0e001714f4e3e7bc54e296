/*console.log("inside blog controller js");*/
app.controller(
				'logincontrol',
				[
						'$scope',
						'$rootScope',
						'loginservice',
						'$location',
						'$window',
						'bid',
						'$cookieStore',
						'$http',
						function($scope, $rootScope, $http, loginservice,
								$location, $window, bid, $cookieStore) {
							var self = this;
							self.user1 = {
								username : '',
								emailid : '',
								password : '',
								phno : null,
								status : 'OFFLINE',
								role : 'user'
							};

							self.login = login;
							self.logout = logout;
							self.reset = reset;

							function login() {
								console.log('the self user 1 login is '+self.user1.emailid);
								console.log('the self user1 login pass is'+self.user1.password);
								loginservice
										.loginuser(self.user1.emailid, self.user1.password)
										.then(
												function(response) {
													self.user1 = response;
													$window.alert("login successful");
													console.log('the role is '
															+ self.user1.role);
													$rootScope.currentUser = self.user1;
													console.log('user in rootscope '
																	+ $rootScope.currentUser);

													$http.defaults.headers.common['Authorization'] = 'Basic '
															+ $rootScope.currentUser;
													$rootScope.currentUserSignedIn = true;
													$cookieStore.put(
																	'currentUser',
																	$rootScope.currentUser);
													if (self.user1.role == "user")

														$window.location.href = "http://localhost:8080/FriendZoneFrontEnd/#/viewallblogs";
													else
														$window.location.href = "http://localhost:8080/FriendZoneFrontEnd/#/createforum";
												},
												function(errResponse) {
													console
															.error('invalid data');
													reset();
													$window
															.alert('invalid data');
												});

							}

							function reset() {
								self.user1 = {
									username : '',
									emailid : '',
									password : '',
									phno : null,
									status : 'OFFLINE',
									role : 'user'
								};
							}

							function logout() {
								console.log("logout method");
								loginservice.logout(self.user1)
								$rootScope.currentUser = {};
								$cookieStore.remove('currentUser');

								$location.path('/');

							}
						} ]);