package com.friendzone.Controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.friendzone.DaoServices.Userservices;
import com.friendzone.Model.UserRegModel;

@RestController
public class UserController {
	
	@Autowired
	Userservices userservices;
	
	@RequestMapping(value="/usersignin", method = RequestMethod.POST)
	public ResponseEntity<String> registeruser(@RequestBody UserRegModel urt) {
		System.out.println("this is new user"+urt);
		System.out.println("username  "+urt.getUsername());
		System.out.println("this is email id "+urt.getEmailid());
		if (userservices.insertUser(urt)) {
			return new ResponseEntity<String>(HttpStatus.CREATED);
		} else {
			return new ResponseEntity<String>(HttpStatus.NOT_ACCEPTABLE);
		}
	}
	
	
	@RequestMapping(value="/userslistview", method = RequestMethod.GET)
	public ResponseEntity<ArrayList<UserRegModel>> listAllUsers() 
    {
		System.out.println("inside request mapping controller");
		ArrayList<UserRegModel> users = userservices.viewUsers();
		System.out.println(users);
        if(users.isEmpty())
        {
            return new ResponseEntity<ArrayList<UserRegModel>>(HttpStatus.NO_CONTENT);
        }
        else
        {
        	return new ResponseEntity((ArrayList<UserRegModel>) users, HttpStatus.OK);
        }
    }
	
	@RequestMapping(value="/usergetone/{emailid:.+}", method = RequestMethod.GET,produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<UserRegModel> getoneuser(@PathVariable("emailid")String emailid)
	{
		//String newemail=emailid.concat(".com");
		System.out.println("the email id is "+emailid);
		String useremail = emailid.substring(1,emailid.length()-1);
		System.out.println(useremail);
		UserRegModel user = userservices.viewOneUser(useremail);
		if(user == null)
		{
			System.out.println("user with email id "+useremail+" does not exist");
			return new ResponseEntity<UserRegModel>(user,HttpStatus.NOT_FOUND);
		}
		else
		{
			System.out.println("the user is" + user.toString());
			return new ResponseEntity<UserRegModel>(user,HttpStatus.OK);
		}
	}

}
